////////////////////////////////////////////////////////////////////////////////////
/// @file Droite3DTest.cpp
/// 
/// @date 2015-11-01
/// @version 1.0
////////////////////////////////////////////////////////////////////////////////////
#include "Droite3DTest.h"
#include "Droite3D.h"
#include "Plan3D.h"
#include "Utilitaire.h"

using namespace math;


// Enregistrement de la suite de tests au sein du registre
CPPUNIT_TEST_SUITE_REGISTRATION(Droite3DTest);

////////////////////////////////////////////////////////////////////////
///
/// @fn void Droite3DTest::setUp()
///
/// Effectue l'initialisation préalable à l'exécution de l'ensemble des
/// cas de tests de cette suite de tests (si nécessaire).
/// 
/// Si certains objets doivent être construits, il est conseillé de le
/// faire ici.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void Droite3DTest::setUp()
{
	//droite3d_ = new Droite3D(point1, point2);


}

////////////////////////////////////////////////////////////////////////
///
/// @fn void Droite3DTest::tearDown()
///
/// Effectue les opérations de finalisation nécessaires suite à l'exécution
/// de l'ensemble des cas de tests de cette suite de tests (si nécessaire).
/// 
/// Si certains objets ont été alloués à l'initialisation, ils doivent être
/// désalloués, et il est conseillé de le faire ici.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void Droite3DTest::tearDown()
{
	

}

////////////////////////////////////////////////////////////////////////
///

///
////////////////////////////////////////////////////////////////////////
void Droite3DTest::intersectionTest()
{
	

}

////////////////////////////////////////////////////////////////////////
///

///
////////////////////////////////////////////////////////////////////////
void Droite3DTest::intersectionSegmentTest()
{

}
////////////////////////////////////////////////////////////////////////
///

///
////////////////////////////////////////////////////////////////////////
void Droite3DTest::distancePointTest()
{

}
////////////////////////////////////////////////////////////////////////
///

///
/////////////////////////////////////////////////////////////////////
void Droite3DTest::perpendiculaireDroiteTEst()
{

}
////////////////////////////////////////////////////////////////////////
///