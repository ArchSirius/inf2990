///////////////////////////////////////////////////////////////////////////////
/// @file DeleteTool.cpp
/// @author INF2990-A15-01
/// @date 2015-09-16
/// @version 1.0
///
/// @addtogroup inf2990 INF2990
/// @{
///////////////////////////////////////////////////////////////////////////////

#include "DeleteTool.h"


////////////////////////////////////////////////////////////////////////
///
/// @fn virtual void DeleteTool::visitNoeudCylindre(NoeudCylindre* node)
///
/// Implémentation du visiteur Suppression pour un noeud de type
/// NoeudCylindre.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void DeleteTool::visitNoeudCylindre(NoeudCylindre* node)
{
	defaultDelete(node);
}

////////////////////////////////////////////////////////////////////////
///
/// @fn virtual void DeleteTool::visitNoeudDepart(NoeudDepart* node)
///
/// Implémentation du visiteur Suppression pour un noeud de type
/// NoeudDepart.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void DeleteTool::visitNoeudDepart(NoeudDepart* node)
{
	// NoeudDepart ne peut pas être supprimé
}

////////////////////////////////////////////////////////////////////////
///
/// @fn virtual void DeleteTool::visitNoeudLigne(NoeudLigne* node)
///
/// Implémentation du visiteur Suppression pour un noeud de type
/// NoeudLigne.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void DeleteTool::visitNoeudLigne(NoeudLigne* node)
{
	defaultDelete(node);
}

////////////////////////////////////////////////////////////////////////
///
/// @fn virtual void DeleteTool::visitvisitNoeudMur(visitNoeudMur* node)
///
/// Implémentation du visiteur Suppression pour un noeud de type
/// visitNoeudMur.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void DeleteTool::visitNoeudMur(NoeudMur* node)
{
	defaultDelete(node);
}

////////////////////////////////////////////////////////////////////////
///
/// @fn virtual void DeleteTool::defaultDelete(NoeudAbstrait* node)
///
/// Implémentation du visiteur Suppression par défaut.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void DeleteTool::defaultDelete(NoeudAbstrait* node)
{
	NoeudAbstrait* parent = node->obtenirParent();
	parent->effacer(node);
}

///////////////////////////////////////////////////////////////////////////////
/// @}
///////////////////////////////////////////////////////////////////////////////
